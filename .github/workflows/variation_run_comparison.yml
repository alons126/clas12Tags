name: TEXT vs SQLITE

# Controls when the workflow will run
on:
  # Triggers the workflow on all pushes
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  comparison:
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:dev-almalinux94
    strategy:
      fail-fast: false
      matrix:
        detector:
          - dc
          - ftof
          - htcc

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Run ${{ matrix.detector }} comparison
        run: |
          ./ci/variation_run_comparison.sh -d ${{ matrix.detector }}
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.detector }}
          path: /root/logs/


summary:
    needs: comparison
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact Names from Matrix
        run: |
          # Generate a list of detectors from the matrix
          detectors=(${{ needs.comparison.strategy.matrix.detector }})
          echo "DETECTORS=${detectors[*]}" >> $GITHUB_ENV

      - name: Download Artifacts Dynamically
        run: |
          # Read the detectors from the environment
          IFS=' ' read -r -a detectors <<< "$DETECTORS"
          
          mkdir -p logs/

          # Download each artifact dynamically
          for detector in "${detectors[@]}"; do
            echo "Downloading logs for detector: $detector"
            artifact_name="logs-${detector}"
            echo "Downloading artifact: $artifact_name"
            gh run download-artifact --name "$artifact_name" --dir logs/ || echo "Artifact $artifact_name not found."
          done

      - name: Aggregate Logs and Generate Table
        run: |
          # Aggregate all logs into a single file
          cat logs/*.log > comparison.log

          # Generate the table header
          echo "| Detector | Variation | Run | Status  |" > summary.md
          echo "|----------|-----------|-----|---------|" >> summary.md

          # Read the aggregated log and append rows to the table
          while IFS=: read -r detector variation run status; do
            echo "| $detector | $variation | $run | $status |" >> summary.md
          done < comparison.log

          # Write the table to the GitHub Actions summary
          cat summary.md >> $GITHUB_STEP_SUMMARY

      - name: Display Summary in Logs
        run: cat $GITHUB_STEP_SUMMARY